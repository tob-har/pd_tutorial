#N canvas 147 309 680 469 10;
#X msg 195 168 1;
#X msg 53 167 2;
#X msg 124 167 3;
#X obj 195 237 print;
#X obj 53 236 print;
#X obj 124 236 print;
#X obj 195 122 loadbang;
#X obj 53 122 loadbang;
#X obj 124 122 loadbang;
#X text 278 122 The object [loadbang] fires a bang (the DO THIS! command
in Pd that triggers a process) at the startup of the patch. In the
Pd windwo you can see \, that Pd is prcessing a patch from RIGHT to
LEFT. Actually \, Pd is processing every patch from down right \, to
top left of the patcher window. In most cases \, that won't bother
you... but it is import to know \, as this simple example shows.;
#X obj 19 16 ../pd_tutorial_header;
#N canvas 0 23 450 300 subpatch 0;
#X obj 26 26 loadbang;
#X obj 26 73 print inside_subpatch;
#X msg 26 50 i bang first;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 178 303 pd subpatch;
#X text 279 333 loadbangs inside subpatches are firing before the main
patcher!;
#X text 260 302 <- double-click to open;
#X text 280 319 as you can see in the pd console window:;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 2 0 5 0;
#X connect 6 0 0 0;
#X connect 7 0 1 0;
#X connect 8 0 2 0;
